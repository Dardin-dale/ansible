- name: Check if fnm is installed
  command: which fnm
  register: fnm_check
  ignore_errors: yes
  changed_when: false

- name: Create temporary installation script for fnm
  copy:
      dest: "/tmp/install_fnm.sh"
      mode: "0755"
      content: |
          #!/bin/bash
          curl -fsSL https://fnm.vercel.app/install | bash
          source ~/.bashrc
          echo "FNM installed at: $(which fnm 2>/dev/null || echo 'not found')"
          exit 0
  when: fnm_check.rc != 0

- name: Install fnm
  shell: "/tmp/install_fnm.sh"
  register: fnm_install_result
  when: fnm_check.rc != 0

- name: Debug fnm installation
  debug:
      var: fnm_install_result
  when: fnm_check.rc != 0

- name: Add fnm to shell configuration files
  blockinfile:
      path: "{{ item }}"
      block: |
          export PATH=$HOME/.local/share/fnm:$PATH
          eval "$(fnm env --use-on-cd 2>/dev/null || true)"
      marker: "# {mark} ANSIBLE MANAGED BLOCK - fnm"
  loop:
      - "{{ ansible_env.HOME }}/.bashrc"
      - "{{ ansible_env.HOME }}/.zshrc"
  when: fnm_check.rc != 0

- name: Install Node.js and global packages
  shell: |
      #!/bin/bash
      set -e

      # Set up fnm environment
      export PATH="$HOME/.local/share/fnm:$PATH"

      # Initialize fnm if available
      if command -v fnm &> /dev/null; then
          eval "$(fnm env)"
      else
          echo "ERROR: fnm not found in PATH"
          exit 1
      fi

      # Install Node.js LTS if not already installed
      if ! fnm list | grep -q "lts"; then
          fnm install --lts
          fnm default lts-latest
      fi

      # Verify Node.js installation
      node -v
      npm -v

      # Install global npm packages
      npm install -g @anthropic-ai/claude-code
      npm install -g yarn
      npm install -g pnpm
      npm install -g http-server
      npm install -g nodemon
      npm install -g serve
      npm install -g tldr
      npm install -g npm-check-updates

      echo "Node.js and global packages installed successfully"
  args:
      executable: /bin/bash
  register: node_and_packages_install
  changed_when: true
  environment:
      PATH: "{{ ansible_env.HOME }}/.local/share/fnm:{{ ansible_env.PATH }}"
      HOME: "{{ ansible_env.HOME }}"

- name: Create Claude Code bash wrapper script
  copy:
      dest: "{{ ansible_env.HOME }}/.local/bin/claude-bash"
      mode: "0755"
      content: |
          #!/bin/bash
          # Wrapper script to run Claude Code in bash to avoid zsh rendering issues
          # This script always runs in bash environment regardless of calling shell
          exec claude "$@"

- name: Add Claude Code aliases to shell configuration files
  blockinfile:
      path: "{{ item }}"
      block: |
          # Claude Code function for shell switching
          alias claude-bash='~/.local/bin/claude-bash'
          alias cb='claude-bash'  # Short alias
      marker: "# {mark} ANSIBLE MANAGED BLOCK - Claude Code"
  loop:
      - "{{ ansible_env.HOME }}/.bashrc"
      - "{{ ansible_env.HOME }}/.zshrc"
